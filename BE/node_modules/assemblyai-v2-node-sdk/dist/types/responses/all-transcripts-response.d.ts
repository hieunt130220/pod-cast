import type { Axios } from 'axios';
import type { TranscriptResponse } from './transcript-response';
import type { PageDetails } from './page-details';
/**
 * A paginated list of all your transcripts.
 */
export declare class AllTranscriptsResponse {
    /**
     * Creates an instance of AllTranscriptsResponse.
     * @param authenticatedHttpClient - The authenticated http client used to make the request
     * @param data - The data returned from the initial request
     */
    constructor(authenticatedHttpClient: Axios, data: AllTranscriptsResponse);
    /**
     * The authenticated http client.
     */
    httpClient: Axios;
    /**
     * The [pageDetails]{@link PageDetails} of the current response.
     */
    page_details?: PageDetails;
    /**
     * A list of the [transcripts]{@link TranscriptResponse} for the current response.
     */
    transcripts?: TranscriptResponse[];
    /**
     * Get the next page of transcript results.
     * @returns A promise that resolves an {@link AllTranscriptsResponse}
     */
    nextPage: () => Promise<AllTranscriptsResponse>;
    /**
     * Get the previous page of transcript results.
     * @returns A promise that resolves an {@link AllTranscriptsResponse}
     */
    prevPage: () => Promise<AllTranscriptsResponse>;
}
//# sourceMappingURL=all-transcripts-response.d.ts.map